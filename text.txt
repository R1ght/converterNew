Code for Python, Flask server.
Add route "/" with GET method and return index.html
Add route "/jpgtopng" with GET method and return jpgtopng.html
Add route "/pngtojpg" with GET method and return pngtojpg.html
Add route "/webtopng" with GET method and return webtopng.html
Add route "/bmptopng" with GET method and return bmptopng.html
Add route "/pngtopdf" with GET method and return pngtopdf.html
Add route "/tifftopdf" with GET method and return tifftopdf.html

Code for index.html file. Create a div and add these 6 links as list in it with href= appropiate route from our flask server
JPG to PNG converter
PNG to JPG converter 
WEBP to PNG converter
BMP to PNG converter
PNG to PDF converter
TIFF to PDF converter

Code for jpgtopng.html file.
Display input form, so user can select image from their computer.
Also add a "Convert to PNG" button.
onclick button, check if image is selected and image is jpg format and less than 5 MB
if true then send POST request to route "/api/jpgtopng" with image as parameter.
else show relevant error like "select a image" or "image is not jpg format" or something errors

Code for bmptopng.html file.
Display input form, so user can select image from their computer.
Also add a "Convert to PNG" button.
onclick button, check if image is selected and image is jpg format and less than 5 MB
if true then send POST request to route "/api/bmptopng" with image as parameter.
else show relevant error like "select a image" or "image is not bmp format" or something errors

Code for webtopng.html file.
Display input form, so user can select image from their computer.
Also add a "Convert to PNG" button.
onclick button, check if image is selected and image is jpg format and less than 5 MB
if true then send POST request to route "/api/webtopng" with image as parameter.
else show relevant error like "select a image" or "image is not webt format" or something errors

Code for tifftopdf.html file.
Display input form, so user can select image from their computer.
Also add a "Convert to PDF" button.
onclick button, check if image is selected and image is jpg format and less than 5 MB
if true then send POST request to route "/api/tifftopdf" with image as parameter.
else show relevant error like "select a image" or "image is not tiff format" or something errors 

Code for pngtopdf.html file.
Display input form, so user can select image from their computer.
Also add a "Convert to PDF" button.
onclick button, check if image is selected and image is jpg format and less than 5 MB
if true then send POST request to route "/api/pngtopdf" with image as parameter.
else show relevant error like "select a image" or "image is not png format" or something errors

Code for pngtojpg.html file.
Display input form, so user can select image from their computer.
Also add a "Convert to JPG" button.
onclick button, check if image is selected and image is jpg format and less than 5 MB
if true then send POST request to route "/api/pngtojpg" with image as parameter.
else show relevant error like "select a image" or "image is not png format" or something errors

for flask server, create a route "/api/jpgtopng" with POST method. take the image from parameter and convert into PNG. Make response object with image as attachment and return it.

for flask server, create a route "/api/pngtojpg" with POST method. take the image from parameter and convert into JPG. Make response object with image as attachment and return it.

create a route "/api/webptopng" with POST method. take the image from parameter and convert into PNG. Make response object with image as attachment and return it. dont save image on server

create a route "/api/bmptopng" with POST method. take the image from parameter and convert into PNG. Make response object with image as attachment and return it. dont save image on server

create a route "/api/pngtopdf" with POST method. take the image from parameter and convert into PDF. Make response object with image as attachment and return it. dont save image on server

create a route "/api/tifftopdf" with POST method. take the image from parameter and convert into PDF. Make response object with image as attachment and return it. dont save image on server


const response = xhr.response;
                        const blob = new Blob([response], {type: 'image/jpg'});
                        const url = URL.createObjectURL(blob);
                        const link = document.createElement('a');
                        link.href = url;
                        link.download = 'converted_image.jpg';

                        link.click();